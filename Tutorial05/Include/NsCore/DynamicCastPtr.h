////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __CORE_DYNAMICCASTPTR_H__
#define __CORE_DYNAMICCASTPTR_H__


#include <Noesis.h>


/// Forward declarations
//@{
namespace Noesis
{
namespace Core
{
template<class T> class Ptr;
}
}
//@}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// Cast between types using runtime type information extracted from reflection types.
////////////////////////////////////////////////////////////////////////////////////////////////////
template<class CastT, class SourceT>
CastT NsDynamicCast(const Noesis::Core::Ptr<SourceT>& ptr);

////////////////////////////////////////////////////////////////////////////////////////////////////
/// Cast between types using static type information.
/// \remarks Debug compilations are using DynamicCast to check that a static cast is safe.
////////////////////////////////////////////////////////////////////////////////////////////////////
template<class CastT, class SourceT>
CastT NsStaticCast(const Noesis::Core::Ptr<SourceT>& ptr);


#include <NsCore/DynamicCastPtr.inl>


#endif
